datasource db {
    provider = "postgresql"
    url      = env("DB_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Author {
    id    Int    @id @default(autoincrement())
    name  String
    toons Toon[]
}

model Artist {
    id    Int    @id @default(autoincrement())
    name  String
    toons Toon[]
}

model Genre {
    id    Int    @id @default(autoincrement())
    name  String
    toons Toon[]
}

model Tag {
    id    Int    @id @default(autoincrement())
    name  String
    toons Toon[]
}

model Toon {
    id        Int       @id @default(autoincrement())
    slug      String    @unique
    title     String
    alttitle  String?
    authors   Author[]
    artists   Artist[]
    genres    Genre[]
    tags      Tag[]
    status    Status    @default(ONGOING)
    summary   String
    published Boolean   @default(false)
    chapters  Chapter[]
    cover     Image?    @relation(fields: [coverid], references: [id])
    coverid   Int?
}

model Chapter {
    id     Int    @id @default(autoincrement())
    name   String
    date   DateTime
    toon   Toon   @relation(fields: [toonid], references: [id])
    toonid Int
    order  Int // chapter number
    pages  Page[]
}

model Page {
    id        Int     @id @default(autoincrement())
    order     Int // page number
    chapter   Chapter @relation(fields: [chapterid], references: [id])
    chapterid Int
    image     Image   @relation(fields: [imageid], references: [id])
    imageid   Int
}

model Image {
    id   Int    @id @default(autoincrement())
    path String @unique
    status UploadStatus @default(PENDING)
    toon Toon[]
    page Page[]
}

enum Status {
    ONGOING
    COMPLETED
    HIATUS
    DISCONTINUED
}

enum UploadStatus {
    PENDING
    UPLOADED
    FAILED
    DELETED
}
